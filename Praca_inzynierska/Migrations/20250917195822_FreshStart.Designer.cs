// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Praca_inzynierska.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917195822_FreshStart")]
    partial class FreshStart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Obecny")
                        .HasColumnType("boolean");

                    b.Property<int>("SpoznienieMinuty")
                        .HasColumnType("integer");

                    b.Property<int>("TreningId")
                        .HasColumnType("integer");

                    b.Property<string>("Uwagi")
                        .HasColumnType("text");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("obecnosci");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktywna")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("kategorie");
                });

            modelBuilder.Entity("Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataPotwierdzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataZapisu")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GrupaId")
                        .HasColumnType("integer");

                    b.Property<string>("KontaktAwaryjny")
                        .HasColumnType("text");

                    b.Property<int?>("PozycjaListaOczekujacych")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uwagi")
                        .HasColumnType("text");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("zapisy");
                });

            modelBuilder.Entity("Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataRozpoczecia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataZakonczenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("KategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("MaxZawodnikow")
                        .HasColumnType("integer");

                    b.Property<string>("Miejsce")
                        .HasColumnType("text");

                    b.Property<int>("MinZawodnikow")
                        .HasColumnType("integer");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ObecnychZawodnikow")
                        .HasColumnType("integer");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TrenerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("grupy");
                });

            modelBuilder.Entity("Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktywny")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DzienTygodnia")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("GodzinaKoniec")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GodzinaStart")
                        .HasColumnType("interval");

                    b.Property<int>("GrupaId")
                        .HasColumnType("integer");

                    b.Property<string>("Miejsce")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("harmonogram");
                });

            modelBuilder.Entity("Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataTreningu")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("GodzinaKoniec")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GodzinaStart")
                        .HasColumnType("interval");

                    b.Property<int>("GrupaId")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxUczestnikow")
                        .HasColumnType("integer");

                    b.Property<string>("Miejsce")
                        .HasColumnType("text");

                    b.Property<string>("Nazwa")
                        .HasColumnType("text");

                    b.Property<int>("ObecnychUczestnikow")
                        .HasColumnType("integer");

                    b.Property<bool>("Odwolany")
                        .HasColumnType("boolean");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<string>("PowodOdwolania")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("treningi");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktywny")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataUrodzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("OstatnieLogowanie")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("uzytkownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
